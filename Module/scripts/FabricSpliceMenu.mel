global proc addCanvasDeformer()
{
  string $sel[];
  $sel = `ls -selection -exactType transform`;
  $d=`deformer -type "canvasDeformer"`;
  select -r $d;
  FabricCanvasAddPort -m $d -e "" -d "meshes" -p "IO" -t "PolygonMesh[]" -xd "Geometry";
}

global proc addSpliceDeformer()
{
  string $sel[];
  $sel = `ls -selection -exactType transform`;
  $d=`deformer -type "spliceMayaDeformer"`;
  select -r $d;
  fabricSplice("addIOPort", $d, "{\"portName\":\""+("meshes")+"\", \"dataType\":\"PolygonMesh[]\", \"addSpliceMayaAttr\":true}");
}

global proc createSpliceNode()
{
  createNode "spliceMayaNode";
}

global proc createReferencedSpliceNode()
{
  $node = `createNode "spliceMayaNode"`;
  fabricSplice("loadSplice", $node, "{\"asReferenced\": true}");
}

global proc createReferencedSpliceDeformer()
{
  string $sel[];
  $sel = `ls -selection -exactType transform`;
  $node=`deformer -type "spliceMayaDeformer"`;
  select -r $node;
  fabricSplice("addIOPort", $node, "{\"portName\":\""+("meshes")+"\", \"dataType\":\"PolygonMesh[]\", \"addSpliceMayaAttr\":true}");
  fabricSplice("loadSplice", $node, "{\"asReferenced\": true}");
}

global proc reloadReferencedSpliceNode()
{
  string $sel[];
  $sel = `ls -selection`;
  fabricSplice("reloadSplice", $sel[0], "{}");
}

global proc createReferencedDFGNode()
{
  $node = `createNode "canvasNode"`;
  dfgImportJSON -m $node -f "" -r true;
}

global proc reloadReferencedDFGNode()
{
  string $sel[];
  $sel = `ls -selection`;
  dfgReloadJSON -m $sel[0];
}

global proc FabricSpliceLoadMenu(string $pluginName)
{
  global string $fabricSpliceMenu;
  if (`menu -exists $fabricSpliceMenu`)
     deleteUI $fabricSpliceMenu;

  string $name = "Fabric";
  global string $gMainWindow;
  $fabricSpliceMenu = `menu -p $gMainWindow -to true $name`;

  // setup hotkeys
  string $toolCmd = "fabricSpliceToolActivate";
  if( !`runTimeCommand -q -ex $toolCmd` ) {
    runTimeCommand -annotation "FabricSplice Tool" -command "source \"FabricSpliceTool.mel\"; fabricSpliceActivateTool();" -category "Tools" $toolCmd;
    hotkey -k "`" -name $toolCmd;
  }

  // menu items
  menuItem -p $fabricSpliceMenu -ec 1 -c ("createNode \"canvasNode\";") "Create Graph (Node)";
  menuItem -p $fabricSpliceMenu -ec 1 -c ("addCanvasDeformer();") "Create Graph (Deformer)";
  menuItem -p $fabricSpliceMenu -divider true;
  menuItem -p $fabricSpliceMenu -ec 1 -c ("createReferencedDFGNode();") "Create referenced Graph";
  menuItem -p $fabricSpliceMenu -ec 1 -c ("reloadReferencedDFGNode();") "Reload referenced Graph";
  menuItem -p $fabricSpliceMenu -divider true;
  menuItem -p $fabricSpliceMenu -ec 1 -c ("source \"FabricSpliceUI.mel\"; showSpliceEditor(\"" + $pluginName + "\");") "Splice Editor (legacy)";
  menuItem -p $fabricSpliceMenu -divider true;
  menuItem -p $fabricSpliceMenu -ec 1 -c ("createNode \"spliceMayaNode\";") "Create Splice Node (legacy)";
  menuItem -p $fabricSpliceMenu -ec 1 -c ("addSpliceDeformer();") "Create Splice Deformer (legacy)";
  menuItem -p $fabricSpliceMenu -ec 1 -c ("createNode \"spliceMayaDebugger\";") "Create Splice Debugger (legacy)";
  menuItem -p $fabricSpliceMenu -divider true;
  menuItem -p $fabricSpliceMenu -ec 1 -c ("source \"FabricSpliceTool.mel\"; fabricSpliceSaveSplice();") "Export Splice Node (legacy)";
  menuItem -p $fabricSpliceMenu -ec 1 -c ("source \"FabricSpliceTool.mel\"; fabricSpliceLoadSplice();") "Import Splice Node (legacy)";
  menuItem -p $fabricSpliceMenu -divider true;
  menuItem -p $fabricSpliceMenu -ec 1 -c ("createReferencedSpliceNode();") "Create referenced Splice Node (legacy)";
  menuItem -p $fabricSpliceMenu -ec 1 -c ("createReferencedSpliceDeformer();") "Create referenced Splice Deformer (legacy)";
  menuItem -p $fabricSpliceMenu -ec 1 -c ("reloadReferencedSpliceNode();") "Reload referenced Splice Node (legacy)";
  menuItem -p $fabricSpliceMenu -divider true;
  menuItem -p $fabricSpliceMenu -ec 1 -c $toolCmd "Enable Tool";
  menuItem -p $fabricSpliceMenu -divider true;
  menuItem -p $fabricSpliceMenu -ec 1 -c ("fabricSplice \"toggleRenderer\";") -checkBox true "Toggle Renderer";
  menuItem -p $fabricSpliceMenu -divider true;
  menuItem -p $fabricSpliceMenu -ec 1 -c ("launch -web \"http://documentation.fabricengine.com/Splice/latest/HTML/\";") "Online Help";
  menuItem -p $fabricSpliceMenu -ec 1 -c ("launch -web \"http://documentation.fabricengine.com/Splice/latest/HTML/thirdpartylicenses.html\";") "ThirdParty Licenses";
  menuItem -p $fabricSpliceMenu -divider true;
  menuItem -p $fabricSpliceMenu -ec 1 -c ("fabricSplice \"startProfiling\";") "Start Profiling";
  menuItem -p $fabricSpliceMenu -ec 1 -c ("fabricSplice \"stopProfiling\";") "End Profiling";
}

global proc FabricSpliceUnloadMenu()
{
  global string $fabricSpliceMenu;
  if (`menu -exists $fabricSpliceMenu`)
    deleteUI $fabricSpliceMenu;
}
